spring.application.name=UserAuthService
spring.jpa.hibernate.ddl-auto=update
spring.datasource.url=jdbc:mysql://localhost:3306/userAuthService
spring.datasource.username=userAuthServiceUser
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.show-sql: true
#create database userAuthService;
#show databases;
#create user userAuthServiceUser;
#grant all privileges on userAuthService.* to userAuthServiceUser;
server.port=9080
logging.level.org.springframework.security=trace
#spring.security.user.name=user
#spring.security.user.password=password
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-id=oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-secret={noop}secret
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.client-authentication-methods[0]=client_secret_basic
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[0]=authorization_code
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.authorization-grant-types[1]=refresh_token
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.redirect-uris[0]=http://127.0.0.1:8080/login/oauth2/code/oidc-client
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.post-logout-redirect-uris[0]=http://127.0.0.1:8080/
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[0]=openid
#spring.security.oauth2.authorizationserver.client.oidc-client.registration.scopes[1]=profile
#spring.security.oauth2.authorizationserver.client.oidc-client.require-authorization-consent=true
#postman - callback url - https://oauth.pstmn.io/v1/callback
#postman - auth url - http://localhost:9080/oauth2/authorize
#postman - token url - http://localhost:9080/oauth2/token